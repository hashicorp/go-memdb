name: Test and Build

on:
  push:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version-file: go.mod
      - run: go mod download
      - name: Check Formatting
        run: |-
          files=$(go fmt ./...)
          if [ -n "$files" ]; then
            echo "The following file(s) do not conform to go fmt:"
            echo "$files"
            exit 1
          fi
      - name: Vet code
        run: go vet ./...

  go-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version:
          - '1.13' # oldest supported; named in go.mod
          - 'oldstable'
          - 'stable'
    env:
      TEST_RESULTS_PATH: '/tmp/test-results'
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: ${{ matrix.go-version }}
      - uses: autero1/action-gotestsum@7263b9d73912eec65f46337689e59fac865c425f # v2.0.0
        with:
          gotestsum_version: 1.9.0

      - run: mkdir -p "$TEST_RESULTS_PATH"
      - name: Run go tests
        run: |
          gotestsum --format=short-verbose --junitfile "$TEST_RESULTS_PATH/gotestsum-report.xml" -- ./...
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          path: ${{ env.TEST_RESULTS_PATH }}
          name: tests-linux
